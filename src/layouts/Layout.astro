---
interface Props {
    title: string;
    description: string;
    coverImage?: string;
    redirect?: string;
}

const { title, description, coverImage, redirect } = Astro.props;

const canonicalUrl = (() => {
    if (!Astro.site) return;
    const newUrl = new URL(Astro.site);
    if (!newUrl) return;
    const segments = Astro.url.pathname.split("/").filter(Boolean);
    newUrl.pathname = segments.join("/");
    return newUrl.toString();
})();
---

<!doctype html>
<html lang="en" class="w-full h-full m-0">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,300..900;1,300..900&display=swap"
            rel="stylesheet"
        />
        {
            redirect && (
                <meta http-equiv="refresh" content={`0;url=${redirect}`} />
            )
        }
        <title>{title}</title>
        <meta name="title" content={title} />
        <meta name="description" content={description} />
        {canonicalUrl && <link rel="canonical" href={canonicalUrl} />}
        <meta property="og:type" content="website" />
        {canonicalUrl && <meta property="og:url" content={canonicalUrl} />}
        <meta property="og:title" content={title} />
        <meta property="og:description" content={description} />
        {coverImage && <meta property="og:image" content={coverImage} />}
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content={canonicalUrl} />
        <meta property="twitter:title" content={title} />
        <meta property="twitter:description" content={description} />
        {coverImage && <meta property="twitter:image" content={coverImage} />}
    </head>
    <body class="bg-zinc-900 text-white w-full min-h-[100vh] m-0 flex flex-col">
        <slot />
    </body>
</html>
